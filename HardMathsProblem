unblocked-games/
├── index.html
<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<title>Pac-Man</title>
<link rel="stylesheet" href="style.css" />
</head>
<body>
  <canvas id="gameCanvas" width="400" height="400"></canvas>
  <script src="pacman.js"></script>
</body>
</html>

├── style.css
body {
  display: flex;
  justify-content: center;
  align-items: center;
  background: #000;
  height: 100vh;
  margin: 0;
}

canvas {
  border: 2px solid #fff;
}

├── script.js
const canvas = document.getElementById('gameCanvas');
const ctx = canvas.getContext('2d');

const tileSize = 20;
const map = [
  '####################',
  '#........##........#',
  '#.####.#.##.####.#.#',
  '#........##........#',
  '#.####.#.##.####.#.#',
  '#........##........#',
  '#.####.#.##.####.#.#',
  '#........##........#',
  '####################'
];

let pacman = { x: 1, y: 1, dx: 1, dy: 0 };

function drawMap() {
  for (let y = 0; y < map.length; y++) {
    for (let x = 0; x < map[y].length; x++) {
      if (map[y][x] === '#') {
        ctx.fillStyle = 'blue';
        ctx.fillRect(x * tileSize, y * tileSize, tileSize, tileSize);
      } else if (map[y][x] === '.') {
        ctx.fillStyle = 'white';
        ctx.fillRect(x * tileSize + tileSize / 2 - 2, y * tileSize + tileSize / 2 - 2, 4, 4);
      }
    }
  }
}

function drawPacman() {
  ctx.beginPath();
  ctx.fillStyle = 'yellow';
  ctx.arc(
    pacman.x * tileSize + tileSize / 2,
    pacman.y * tileSize + tileSize / 2,
    tileSize / 2 - 2,
    0.2 * Math.PI,
    1.8 * Math.PI
  );
  ctx.lineTo(pacman.x * tileSize + tileSize / 2, pacman.y * tileSize + tileSize / 2);
  ctx.fill();
}

function update() {
  const nextX = pacman.x + pacman.dx;
  const nextY = pacman.y + pacman.dy;

  if (map[nextY][nextX] !== '#') {
    pacman.x = nextX;
    pacman.y = nextY;
  }
}

function gameLoop() {
  ctx.clearRect(0, 0, canvas.width, canvas.height);
  drawMap();
  update();
  drawPacman();
  requestAnimationFrame(gameLoop);
}

document.addEventListener('keydown', (e) => {
  if (e.key === 'ArrowUp') {
    pacman.dx = 0; pacman.dy = -1;
  } else if (e.key === 'ArrowDown') {
    pacman.dx = 0; pacman.dy = 1;
  } else if (e.key === 'ArrowLeft') {
    pacman.dx = -1; pacman.dy = 0;
  } else if (e.key === 'ArrowRight') {
    pacman.dx = 1; pacman.dy = 0;
  }
});

gameLoop();

├── games/
│   ├── game1/
│   │   ├── index.html
│   │   ├── game.js
│   │   └── style.css
│   └── game2/
│       ├── index.html
│       └── ...
